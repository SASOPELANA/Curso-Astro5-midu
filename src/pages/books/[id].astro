---
import { getCollection, render } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import AmazonLogo from "../../components/AmazonLogo.astro";
import BookScore from "../../components/BookScore.astro";
import BuyButton from "../../components/BuyButton.astro";

// CARGAMOS LAS VARIABLES DE ENVIORNMENT - ENTORNO
import { SHOW_BUY_BUTTON } from "astro:env/server";

export async function getStaticPaths() {
  const books = await getCollection("books");
  return books.map((book) => ({
    params: { id: book.slug },
    props: { book },
  }));
}

const { book } = Astro.props;
const { data, slug } = book;
const { title, author, img, readtime, description, buy } = data;

// Error corregido
const { Content } = await book.render();

// si tenemos que renderizar el contenido de la página, para que sea estatica y no se cargue cada vez
export const prerender = true;
---

<Layout title={`${title} - Libros`}>
  <div class="flex gap-12">
    <aside class="flex flex-col gap-4 items-center">
      <a href="/" class="hover:underline opacity-70 hover:font-bold">
        ⏪ Volver al inicio</a
      >
      <img
        transition:name={`img-${slug}`}
        class="rounded w-72 h-auto"
        src={`${img}`}
        alt={title}
      />

      <!-- Enlaces de compra -->
      <!-- Unico componente dinamico y no estatica, renderizarse en el cliente -->
      <BookScore server:defer id={slug}>
        <span slot="fallback" class="text-xs opacity-70">
          Cargando puntuación...
        </span>
      </BookScore>

      {SHOW_BUY_BUTTON && <BuyButton server:defer buy={buy} />}
    </aside>

    <main class="max-w-3xl">
      <h1 transition:name={`title-${slug}`} class="text-4xl font-bold mb-4">
        {title}
      </h1>
      <div class="prose prose-invert">
        <Content />
      </div>
    </main>
  </div>
</Layout>
